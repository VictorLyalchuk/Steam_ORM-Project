// <auto-generated />
using System;
using Data_Access_Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data_Access_Entity.Migrations
{
    [DbContext(typeof(SteamContext))]
    [Migration("20230301083059_iniz")]
    partial class iniz
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data_Access_Entity.Entities.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClientID")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AccountType = "Admin",
                            ClientID = 1
                        });
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AccountID = 1,
                            Email = "Victor@ukr.net",
                            FullName = "Victor Lyalchuk",
                            Login = "Admin",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.ClientGame", b =>
                {
                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.HasKey("ClientID", "GameID");

                    b.HasIndex("GameID");

                    b.ToTable("ClientGame");
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Developer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumberOfStaff")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Developers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Country = "USA",
                            Name = "Rockstar Games",
                            NumberOfStaff = 2000
                        },
                        new
                        {
                            ID = 2,
                            Country = "USA",
                            Name = "Avalanche Software",
                            NumberOfStaff = 1500
                        },
                        new
                        {
                            ID = 3,
                            Country = "USA",
                            Name = "President Studio",
                            NumberOfStaff = 20
                        },
                        new
                        {
                            ID = 4,
                            Country = "USA",
                            Name = "Infinity Ward",
                            NumberOfStaff = 20
                        },
                        new
                        {
                            ID = 5,
                            Country = "Poland",
                            Name = "CD PROJEKT RED",
                            NumberOfStaff = 520
                        },
                        new
                        {
                            ID = 6,
                            Country = "USA",
                            Name = "Respawn",
                            NumberOfStaff = 250
                        },
                        new
                        {
                            ID = 7,
                            Country = "USA",
                            Name = "Larian Studios",
                            NumberOfStaff = 80
                        },
                        new
                        {
                            ID = 8,
                            Country = "USA",
                            Name = "Naughty Dog LLC",
                            NumberOfStaff = 280
                        },
                        new
                        {
                            ID = 9,
                            Country = "USA",
                            Name = "Criterion Games",
                            NumberOfStaff = 140
                        },
                        new
                        {
                            ID = 10,
                            Country = "USA",
                            Name = "Visual Concepts",
                            NumberOfStaff = 180
                        },
                        new
                        {
                            ID = 11,
                            Country = "USA",
                            Name = "EA Canada & EA Romania",
                            NumberOfStaff = 120
                        },
                        new
                        {
                            ID = 12,
                            Country = "USA",
                            Name = "Endnight Games Ltd",
                            NumberOfStaff = 90
                        });
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CostPrice")
                        .HasColumnType("int");

                    b.Property<int>("CountOfSell")
                        .HasColumnType("int");

                    b.Property<int>("DeveloperID")
                        .HasColumnType("int");

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OriginalGame")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("PublisherID")
                        .HasColumnType("int");

                    b.Property<int>("Raiting")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TagID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DeveloperID");

                    b.HasIndex("GenreID");

                    b.HasIndex("PublisherID");

                    b.HasIndex("TagID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CostPrice = 50,
                            CountOfSell = 10,
                            DeveloperID = 1,
                            GenreID = 1,
                            Name = "Grand Theft Auto V",
                            OriginalGame = "",
                            Price = 120,
                            PublisherID = 1,
                            Raiting = 8,
                            ReleaseDate = new DateTime(2013, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 2
                        },
                        new
                        {
                            ID = 2,
                            CostPrice = 70,
                            CountOfSell = 0,
                            DeveloperID = 2,
                            GenreID = 2,
                            Name = "Hogwarts Legacy",
                            OriginalGame = "",
                            Price = 350,
                            PublisherID = 2,
                            Raiting = 7,
                            ReleaseDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 4
                        },
                        new
                        {
                            ID = 3,
                            CostPrice = 45,
                            CountOfSell = 0,
                            DeveloperID = 3,
                            GenreID = 3,
                            Name = "I Am Your President",
                            OriginalGame = "",
                            Price = 220,
                            PublisherID = 3,
                            Raiting = 3,
                            ReleaseDate = new DateTime(2023, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 5
                        },
                        new
                        {
                            ID = 4,
                            CostPrice = 85,
                            CountOfSell = 2,
                            DeveloperID = 4,
                            GenreID = 1,
                            Name = "Call of Duty®: Modern Warfare® II",
                            OriginalGame = "",
                            Price = 450,
                            PublisherID = 4,
                            Raiting = 6,
                            ReleaseDate = new DateTime(2022, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 6
                        },
                        new
                        {
                            ID = 5,
                            CostPrice = 75,
                            CountOfSell = 0,
                            DeveloperID = 5,
                            GenreID = 2,
                            Name = "The Witcher® 3: Wild Hunt",
                            OriginalGame = "",
                            Price = 550,
                            PublisherID = 5,
                            Raiting = 9,
                            ReleaseDate = new DateTime(2015, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 7
                        },
                        new
                        {
                            ID = 6,
                            CostPrice = 70,
                            CountOfSell = 0,
                            DeveloperID = 6,
                            GenreID = 1,
                            Name = "STAR WARS Jedi: Survivor™",
                            OriginalGame = "",
                            Price = 550,
                            PublisherID = 6,
                            Raiting = 6,
                            ReleaseDate = new DateTime(2023, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 8
                        },
                        new
                        {
                            ID = 7,
                            CostPrice = 60,
                            CountOfSell = 150,
                            DeveloperID = 1,
                            GenreID = 2,
                            Name = "Red Dead Redemption 2",
                            OriginalGame = "",
                            Price = 450,
                            PublisherID = 1,
                            Raiting = 8,
                            ReleaseDate = new DateTime(2019, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 7
                        },
                        new
                        {
                            ID = 8,
                            CostPrice = 40,
                            CountOfSell = 0,
                            DeveloperID = 7,
                            GenreID = 2,
                            Name = "Divinity: Original Sin 2 - Definitive Edition",
                            OriginalGame = "",
                            Price = 240,
                            PublisherID = 7,
                            Raiting = 6,
                            ReleaseDate = new DateTime(2017, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 7
                        },
                        new
                        {
                            ID = 9,
                            CostPrice = 50,
                            CountOfSell = 0,
                            DeveloperID = 8,
                            GenreID = 4,
                            Name = "UNCHARTED™: Legacy of Thieves Collection",
                            OriginalGame = "",
                            Price = 380,
                            PublisherID = 8,
                            Raiting = 7,
                            ReleaseDate = new DateTime(2022, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 4
                        },
                        new
                        {
                            ID = 10,
                            CostPrice = 35,
                            CountOfSell = 3,
                            DeveloperID = 9,
                            GenreID = 5,
                            Name = "Need for Speed™ Unbound",
                            OriginalGame = "",
                            Price = 280,
                            PublisherID = 6,
                            Raiting = 5,
                            ReleaseDate = new DateTime(2022, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 9
                        },
                        new
                        {
                            ID = 11,
                            CostPrice = 45,
                            CountOfSell = 0,
                            DeveloperID = 10,
                            GenreID = 6,
                            Name = "NBA 2K23",
                            OriginalGame = "",
                            Price = 330,
                            PublisherID = 9,
                            Raiting = 6,
                            ReleaseDate = new DateTime(2022, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 9
                        },
                        new
                        {
                            ID = 12,
                            CostPrice = 85,
                            CountOfSell = 0,
                            DeveloperID = 11,
                            GenreID = 6,
                            Name = "EA SPORTS™ FIFA 23",
                            OriginalGame = "",
                            Price = 830,
                            PublisherID = 6,
                            Raiting = 7,
                            ReleaseDate = new DateTime(2022, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 9
                        },
                        new
                        {
                            ID = 13,
                            CostPrice = 25,
                            CountOfSell = 0,
                            DeveloperID = 12,
                            GenreID = 1,
                            Name = "Sons Of The Forest",
                            OriginalGame = "",
                            Price = 130,
                            PublisherID = 10,
                            Raiting = 6,
                            ReleaseDate = new DateTime(2023, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 7
                        },
                        new
                        {
                            ID = 14,
                            CostPrice = 55,
                            CountOfSell = 0,
                            DeveloperID = 5,
                            GenreID = 2,
                            Name = "Cyberpunk 2077\r\n",
                            OriginalGame = "",
                            Price = 830,
                            PublisherID = 5,
                            Raiting = 7,
                            ReleaseDate = new DateTime(2020, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TagID = 9
                        });
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Genre", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Action"
                        },
                        new
                        {
                            ID = 2,
                            Name = "RPG"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Strategy"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Adventure"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Racing"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Sport"
                        });
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Publisher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Country = "USA",
                            Name = "Rockstar Games"
                        },
                        new
                        {
                            ID = 2,
                            Country = "USA",
                            Name = "Warner Bros. Games"
                        },
                        new
                        {
                            ID = 3,
                            Country = "USA",
                            Name = "President Studio"
                        },
                        new
                        {
                            ID = 4,
                            Country = "USA",
                            Name = "Activision"
                        },
                        new
                        {
                            ID = 5,
                            Country = "USA",
                            Name = "CD PROJEKT RED"
                        },
                        new
                        {
                            ID = 6,
                            Country = "USA",
                            Name = "Electronic Arts"
                        },
                        new
                        {
                            ID = 7,
                            Country = "USA",
                            Name = "Larian Studios"
                        },
                        new
                        {
                            ID = 8,
                            Country = "USA",
                            Name = "PlayStation PC LLC"
                        },
                        new
                        {
                            ID = 9,
                            Country = "USA",
                            Name = "2K"
                        },
                        new
                        {
                            ID = 10,
                            Country = "USA",
                            Name = "Newnight"
                        });
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.SupportedLanguage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("SupportedLanguages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Language = "English"
                        },
                        new
                        {
                            ID = 2,
                            Language = "French"
                        },
                        new
                        {
                            ID = 3,
                            Language = "German"
                        });
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Tag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Сriminal game"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Include cursing"
                        },
                        new
                        {
                            ID = 3,
                            Name = "New Year Game"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Family Game"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Indie Game"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Military Game"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Historical Game"
                        },
                        new
                        {
                            ID = 8,
                            Name = "Cosmos Game"
                        },
                        new
                        {
                            ID = 9,
                            Name = "Ection Game"
                        });
                });

            modelBuilder.Entity("GameSupportedLanguage", b =>
                {
                    b.Property<int>("_GamesID")
                        .HasColumnType("int");

                    b.Property<int>("_SupportedLanguagesID")
                        .HasColumnType("int");

                    b.HasKey("_GamesID", "_SupportedLanguagesID");

                    b.HasIndex("_SupportedLanguagesID");

                    b.ToTable("GameSupportedLanguage");
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Account", b =>
                {
                    b.HasOne("Data_Access_Entity.Entities.Client", "_Client")
                        .WithOne("_Account")
                        .HasForeignKey("Data_Access_Entity.Entities.Account", "ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_Client");
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.ClientGame", b =>
                {
                    b.HasOne("Data_Access_Entity.Entities.Client", "_Client")
                        .WithMany("_ClientGame")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Entity.Entities.Game", "_Game")
                        .WithMany("_ClientGame")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_Client");

                    b.Navigation("_Game");
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Game", b =>
                {
                    b.HasOne("Data_Access_Entity.Entities.Developer", "_Developer")
                        .WithMany("_Games")
                        .HasForeignKey("DeveloperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Entity.Entities.Genre", "_Genre")
                        .WithMany("_Games")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Entity.Entities.Publisher", "_Publisher")
                        .WithMany("_Games")
                        .HasForeignKey("PublisherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Entity.Entities.Tag", "_Tag")
                        .WithMany("_Games")
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_Developer");

                    b.Navigation("_Genre");

                    b.Navigation("_Publisher");

                    b.Navigation("_Tag");
                });

            modelBuilder.Entity("GameSupportedLanguage", b =>
                {
                    b.HasOne("Data_Access_Entity.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("_GamesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Access_Entity.Entities.SupportedLanguage", null)
                        .WithMany()
                        .HasForeignKey("_SupportedLanguagesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Client", b =>
                {
                    b.Navigation("_Account");

                    b.Navigation("_ClientGame");
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Developer", b =>
                {
                    b.Navigation("_Games");
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Game", b =>
                {
                    b.Navigation("_ClientGame");
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Genre", b =>
                {
                    b.Navigation("_Games");
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Publisher", b =>
                {
                    b.Navigation("_Games");
                });

            modelBuilder.Entity("Data_Access_Entity.Entities.Tag", b =>
                {
                    b.Navigation("_Games");
                });
#pragma warning restore 612, 618
        }
    }
}
